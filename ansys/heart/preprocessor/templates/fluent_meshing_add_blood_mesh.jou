;; JINJA template to add blood mesh to existing solid mesh of heart model
;; uses cap definitions (dictionary with cap name and formatted node ids) as input 
;; Note. nodes should be formatted as a single string: '"bnXXX" "bnYYY" "bnZZZ"'
;
; import mesh file 
( define my-output-mesh "{{output_path}}" )
;
/file/read "{{input_mesh_file}}"
; **************
; Creating caps:
; **************
{% for cap_name, cap_node_ids in caps.items() %}
; creating {{cap_name}}
/boundary/modify/create "{{cap_name}}" wall
(define zone-id 
	( get-unreferenced-face-zones-of-filter '{{cap_name}}*) )
; triangulate edge loop
(%tg-poly-triangulate-loop '(
	{{cap_node_ids}}
	)
	(list-ref zone-id 0)
	)
; merge zones
(define zone-ids (get-unreferenced-face-zones-of-filter '{{cap_name}}*) )
(ti-menu-load-string  ( format #f "/boundary/manage/merge  '~a alphabetic-order"
							zone-ids
						 ) )
{% endfor %}
;
; **************
; **************
;
; create mesh object
/objects/create "valves" fluid , '(
	{% for cap_name, _ in caps.items() %} {{cap_name}} {% endfor %}
	) , mesh yes
/objects/labels/create-label-per-zone "valves" '(*)
/objects/labels/remove-zones "valves" "valves" '(*)
;
; prepare for (re) volume meshing:
; merge objects
/boundary/remesh/controls/intersect/remesh-post-intersection? no
/objects/join-intersect/add-object-to-mesh "wrapped-myocardium" '(valves)
/diagnostics/face-connectivity/fix-duplicate-faces objects '(wrapped-myocardium)
; clear mesh
/mesh/clear-mesh yes
; recompute volumetric regions
/size-functions/compute yes
/objects/volumetric-regions/compute "wrapped-myocardium" no yes
; remesh 
/mesh/auto-mesh "wrapped-myocardium" yes pyramids tet no

; save new mesh:
( ti-menu-load-string 				
	(format #f "/file/write-mesh ~a ok" my-output-mesh )
)
name: Github Actions

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'heart.docs.pyansys.com'
  LIBRARY_NAME: 'pyansys-heart'
  LIBRARY_NAMESPACE: 'ansys.heart'

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: "Running documentation style checks"
        uses: ansys/actions/doc-style@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: "Build and Smoke tests"
    runs-on: ${{ matrix.os }}
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: ansys/actions/build-wheelhouse@v5
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          check-licenses: false

  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - name: Install dynalib dependency
        run: |
          python -m pip install dynalib==0.1.0 --index-url=$PIP_EXTRA_INDEX_URL

      - uses: ansys/actions/doc-build@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          check-links: false
          # By default, also '-W --keep-going'... we should eventually solve the warnings in the build process.
          sphinxopts: '-j auto'

  doc-deploy-dev:
    name: "Deploy development documentation"
    # Deploy development only when merging or pushing to the 'main' branch
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: doc-build
    steps:
      - uses: ansys/actions/doc-deploy-dev@v5
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: [smoke-tests]
    strategy:
      matrix:
#        os: [windows-latest, macos-latest, ubuntu-latest]
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install dynalib==0.1.0 --index-url=$PIP_EXTRA_INDEX_URL
          python -m pip install .[tests]
        env:
          PIP_EXTRA_INDEX_URL: 'https://${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}@pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/simple/'

      - name: Run tests
        run: |
          python -m pytest -v -m "not (requires_fluent or downloader)"


  build-library:
    name: "Build library basic example"
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Install dynalib dependency
        run: |
          python -m pip install dynalib==0.1.0 --index-url=$PIP_EXTRA_INDEX_URL
      - uses: ansys/actions/build-library@v5
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  release:
    name: "Release project to private PyPI and GitHub"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build-library
    runs-on: ubuntu-latest
    steps:

      - name: "Release to the private PyPI repository"
        uses: ansys/actions/release-pypi-private@v5
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

      - name: "Release to GitHub"
        uses: ansys/actions/release-github@v5
        with:
          library-name: ${{ env.LIBRARY_NAME }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    # Deploy release documentation when creating a new tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: ansys/actions/doc-deploy-stable@v5
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

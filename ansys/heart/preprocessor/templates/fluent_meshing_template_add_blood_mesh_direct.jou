;;
;;; do this for all endocardial parts
;;; copy boundary from mesh (goes into unreferenced)
;;; ------------------------------------------------
;;/boundary/manage/copy '(left-ventricle-endocardium)
;;; auto patch holes on this boundary
;;
;;(define endocardium-zone-id (get-unreferenced-face-zones-of-filter 'left-ventricle-*) )
;;(ti-menu-load-string  ( format #f "/boundary/modify/auto-patch-holes ~a"
;;							endocardium-zone-id
;;						 ) )
;;(ti-menu-load-string  ( format #f "/boundary/manage/delete ~a"
;;							endocardium-zone-id
;;						 ) )
;;/boundary/modify/select-zone (list-ref endocardium-zone-id)
;;/boundary/modify/delete yes
;;; ------------------------------------------------
;;/boundary/manage/copy '(*endocardium*)
;;(tgapi-util-integer-list-subtract '(list-1) '(list-2))
;(for-each
;	(lambda (x)
;		(display x)
;		(display " "))
;	'(1 "abc" 5.3))
; for right ventricle
; create new object
/mesh/clear-mesh yes
;  Below should be general:
(define zone-ids-endo (get-face-zones-of-filter '*endocardium*) )
(define zone-id-septum (get-face-zones-of-filter '*septum*) )
(define zone-ids-to-copy (append zone-ids-endo zone-id-septum) )
(ti-menu-load-string  ( format #f "/boundary/manage/copy ~a"
							zone-ids-to-copy
						 ) )						 
; auto patch holes on this boundary
; Note: auto patch doesn't always work -> why?x
(define zone-ids-to-patch (get-unreferenced-face-zones-of-filter '*) )
(ti-menu-load-string  ( format #f "/boundary/modify/auto-patch-holes ~a"
							zone-ids-to-patch
						 ) )						 
(define zone-ids-patch (get-unreferenced-face-zones-of-filter '*patch*) )

; create object with only the patches 
(ti-menu-load-string (format #f "/objects/create valves fluid , ~a , mesh yes"
						zone-ids-patch ) )
/objects/delete-unreferenced-faces-and-edges
/objects/labels/create-label-per-zone "valves" '(*)
/objects/labels/remove-zones "valves" "valves" '(*)
;(ti-menu-load-string  ( format #f "/boundary/manage/delete ~a"
;							zone-ids-to-patch
;						 ) )
; delete the rest of the unreferenced zones
;(for-each 
;    (lambda (x)
;	    (ti-menu-load-string ( format #f /boundary/modify/select

;(ti-menu-load-string  ( format #f "/boundary/manage/delete ~a"
;							zone-id
;						 ) )
/objects/merge '(wrapped-myocardium valves) "wrapped-myocardium"
/diagnostics/face-connectivity/fix-duplicate-faces objects '(wrapped-myocardium)
/boundary/remesh/controls/intersect/remesh-post-intersection? no
/boundary/remesh/intersect-all-face-zones yes 40 0.05 no
/boundary/manage/remove-suffix '(*)
; compute size field
/size-functions/compute yes
; rename computed regions
;(define vol-region-name (tgapi-util-get-region-name-list-of-pattern 'wrapped-myocardium "right-ventricle*"))
;(ti-menu-load-string (format #f "/mesh/objects/volumetric-regions/rename wrapped-myocardium ~a ~a"
;						(list-ref vol-region-name 0 )  "right-ventricle") )


/objects/volumetric-regions/compute "wrapped-myocardium" no yes
; remesh 
/mesh/auto-mesh "wrapped-myocardium" yes pyramids tet no
;/objects/join-intersect/add-object-to-mesh "wrapped-myocardium" '(valves)
;/diagnostics/face-connectivity/fix-duplicate-faces objects '(wrapped-myocardium)
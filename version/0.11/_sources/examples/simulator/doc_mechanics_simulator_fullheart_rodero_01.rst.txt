
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\simulator\doc_mechanics_simulator_fullheart_rodero_01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_simulator_doc_mechanics_simulator_fullheart_rodero_01.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_simulator_doc_mechanics_simulator_fullheart_rodero_01.py:


Full-heart mechanics
--------------------
This example shows you how to consume a preprocessed full heart model and
set it up for the main mechanical simulation. This examples demonstrates how
you can load a pre-computed heart model, compute the fiber direction, compute the
stress free configuration, and finally simulate the mechanical model.

.. GENERATED FROM PYTHON SOURCE LINES 34-44

Example setup
-------------
before computing the fiber orientation, and stress free configuration we
need to load the required modules, load a heart model and configure the
mechanical simulator.

Perform the required imports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the required modules and set relevant paths, including that of the working
directory, model, and ls-dyna executable.

.. GENERATED FROM PYTHON SOURCE LINES 44-64

.. code-block:: Python


    import os
    from pathlib import Path

    import ansys.heart.core.models as models
    from ansys.heart.core.simulator import DynaSettings, MechanicsSimulator

    # accept dpf license agreement
    # https://dpf.docs.pyansys.com/version/stable/getting_started/licensing.html#ref-licensing
    os.environ["ANSYS_DPF_ACCEPT_LA"] = "Y"

    # set working directory and path to model. Note that we assume here that that there is a
    # preprocessed model called "heart_model.vtu" available in the working directory.
    workdir = Path.home() / "pyansys-heart" / "downloads" / "Rodero2021" / "01" / "FullHeart"
    path_to_model = str(workdir / "heart_model.vtu")

    # load the full heart.
    model: models.FullHeart = models.FullHeart(working_directory=workdir)
    model.load_model_from_mesh(path_to_model, path_to_model.replace(".vtu", ".partinfo.json"))


.. GENERATED FROM PYTHON SOURCE LINES 65-70

Instantiate the simulator object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
instantiate your DynaSettings and Simulator objects.
Change options where necessary. Note that you may need to configure your environment
variables if you choose to use a `mpi` version of LS-DYNA.

.. GENERATED FROM PYTHON SOURCE LINES 70-87

.. code-block:: Python


    # instantiate dyna settings object
    lsdyna_path = "lsdyna_intelmpi"
    # instantiate dyna settings object
    dyna_settings = DynaSettings(
        lsdyna_path=lsdyna_path,
        dynatype="intelmpi",
        num_cpus=8,
    )

    # instantiate simulator object
    simulator = MechanicsSimulator(
        model=model,
        dyna_settings=dyna_settings,
        simulation_directory=os.path.join(workdir, "simulation-mechanics"),
    )


.. GENERATED FROM PYTHON SOURCE LINES 88-91

Load simulation settings
~~~~~~~~~~~~~~~~~~~~~~~~
Here we load the default settings.

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python


    simulator.settings.load_defaults()


.. GENERATED FROM PYTHON SOURCE LINES 95-98

Compute the fiber orientation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Compute fiber orientation and plot the computed fibers on the entire model.

.. GENERATED FROM PYTHON SOURCE LINES 98-104

.. code-block:: Python


    simulator.compute_fibers()

    # # Plot the resulting fiber orientation
    simulator.model.plot_fibers(n_seed_points=2000)


.. GENERATED FROM PYTHON SOURCE LINES 105-108

.. image:: /_static/images/full_heart_rodero_01_fibers.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 110-115

Compute the stress free configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Compute the stress free configuration. That is, when imaged under diastole
we need to approximate the initial stress at `t=0`. The stress free configuration
is computed through Rausch' method.

.. GENERATED FROM PYTHON SOURCE LINES 115-118

.. code-block:: Python


    simulator.compute_stress_free_configuration()


.. GENERATED FROM PYTHON SOURCE LINES 119-123

Start main simulation
~~~~~~~~~~~~~~~~~~~~~
Start the main mechanical simulation. This uses the previously computed fiber orientation
and stress free configuration and runs the final LS-DYNA heart model.

.. GENERATED FROM PYTHON SOURCE LINES 123-127

.. code-block:: Python


    simulator.simulate()




.. _sphx_glr_download_examples_simulator_doc_mechanics_simulator_fullheart_rodero_01.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: doc_mechanics_simulator_fullheart_rodero_01.ipynb <doc_mechanics_simulator_fullheart_rodero_01.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: doc_mechanics_simulator_fullheart_rodero_01.py <doc_mechanics_simulator_fullheart_rodero_01.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: doc_mechanics_simulator_fullheart_rodero_01.zip <doc_mechanics_simulator_fullheart_rodero_01.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

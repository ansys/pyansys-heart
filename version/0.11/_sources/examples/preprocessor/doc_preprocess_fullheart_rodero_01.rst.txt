
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\preprocessor\doc_preprocess_fullheart_rodero_01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_preprocessor_doc_preprocess_fullheart_rodero_01.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_preprocessor_doc_preprocess_fullheart_rodero_01.py:


Create a full heart model
---------------------------------
This example shows you how to process a case from Rodero et al (2021) into
a simulation-ready heart model.

.. GENERATED FROM PYTHON SOURCE LINES 32-38

Example setup
-------------
Perform the required imports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the required modules and set relevant paths, including that of the working
directory and generated model

.. GENERATED FROM PYTHON SOURCE LINES 38-72

.. code-block:: Python



    import json
    import os
    from pathlib import Path

    import ansys.heart.core.models as models
    from ansys.heart.core.pre.database_utils import get_compatible_input

    # Use Fluent 24.1 for meshing.
    import ansys.heart.core.pre.mesher as mesher
    from ansys.heart.core.utils.download import download_case_from_zenodo, unpack_case

    mesher._fluent_version = "24.1"

    # specify a download directory.
    download_folder = Path.home() / "pyansys-heart" / "downloads"

    # download a compatible case from the Zenodo database.
    tar_file = download_case_from_zenodo("Rodero2021", 1, download_folder, overwrite=False)
    # unpack the case to get the unput .case/.vtk file.
    case_file = unpack_case(tar_file)

    # specify working directory. Here we use the directory of the case file.
    workdir = os.path.join(os.path.dirname(case_file), "FullHeart")

    if not os.path.isdir(workdir):
        os.makedirs(workdir)

    # specify paths to the model, input, and part definitions.
    path_to_model = os.path.join(workdir, "heart_model.vtu")
    path_to_input = os.path.join(workdir, "input_model.vtp")
    path_to_part_definitions = os.path.join(workdir, "part_definitions.json")


.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. note::
   You may need to (manually) download the .case or .vtk files from the Strocchi2020
   and Rodero2021 databases first. See:

   - https://zenodo.org/records/3890034
   - https://zenodo.org/records/4590294

   Alternatively you can make use of the download
   module instead. See the download example.

.. GENERATED FROM PYTHON SOURCE LINES 87-89

Convert the .vtk file into compatible input format
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 89-99

.. code-block:: Python

    input_geom, part_definitions = get_compatible_input(
        case_file, model_type="FullHeart", database="Rodero2021"
    )

    # Note that the input model and part definitions can be used for later use.
    # save input geometry and part definitions:
    input_geom.save(path_to_input)
    with open(path_to_part_definitions, "w") as f:
        json.dump(part_definitions, f, indent=True)


.. GENERATED FROM PYTHON SOURCE LINES 100-103

Create a heart model
~~~~~~~~~~~~~~~~~~~~
initialize a full heart model

.. GENERATED FROM PYTHON SOURCE LINES 103-124

.. code-block:: Python

    model = models.FullHeart(working_directory=workdir)

    # load input model generated in an earlier step.
    model.load_input(input_geom, part_definitions, "surface-id")

    # mesh the volume of all structural parts.
    model.mesh_volume(use_wrapper=True, global_mesh_size=1.5)

    # update the model and extract the required (anatomical) features
    model._update_parts()

    # Optionally save the simulation mesh as a vtk object for "offline" inspection
    model.mesh.save(os.path.join(model.workdir, "simulation-mesh.vtu"))
    model.save_model(os.path.join(model.workdir, "heart_model.vtu"))

    # print some info about the processed model.
    print(model)

    # print part names
    print(model.part_names)


.. GENERATED FROM PYTHON SOURCE LINES 125-129

Visualize results
~~~~~~~~~~~~~~~~~
You can visualize and inspect the components of the model by accessing
various properties/attributes and invoke methods.

.. GENERATED FROM PYTHON SOURCE LINES 129-135

.. code-block:: Python

    print(f"Volume of LV cavity: {model.left_ventricle.cavity.volume} mm^3")
    print(f"Volume of LV cavity: {model.left_atrium.cavity.volume} mm^3")

    # plot the remeshed model
    model.plot_mesh(show_edges=False)


.. GENERATED FROM PYTHON SOURCE LINES 136-139

.. image:: /_static/images/full_heart_mesh.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 139-143

.. code-block:: Python


    # plot the endocardial surface of the left ventricle.
    model.left_ventricle.endocardium.plot(show_edges=True, color="r")


.. GENERATED FROM PYTHON SOURCE LINES 144-147

.. image:: /_static/images/full_heart_lv_endocardium.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 147-156

.. code-block:: Python


    # loop over all cavities and plot these in a single window with pyvista.
    import pyvista as pv

    cavities = pv.PolyData()
    for c in model.cavities:
        cavities += c.surface
    cavities.plot(show_edges=True)


.. GENERATED FROM PYTHON SOURCE LINES 157-160

.. image:: /_static/images/full_heart_cavities.png
  :width: 400pt
  :align: center


.. _sphx_glr_download_examples_preprocessor_doc_preprocess_fullheart_rodero_01.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: doc_preprocess_fullheart_rodero_01.ipynb <doc_preprocess_fullheart_rodero_01.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: doc_preprocess_fullheart_rodero_01.py <doc_preprocess_fullheart_rodero_01.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: doc_preprocess_fullheart_rodero_01.zip <doc_preprocess_fullheart_rodero_01.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

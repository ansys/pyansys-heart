
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/preprocessor/doc_example_atrial_fiber.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_preprocessor_doc_example_atrial_fiber.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_preprocessor_doc_example_atrial_fiber.py:


Atrial fiber
------------
This examples shows how to generate fibers with Laplace-Dirichlet-Rule-Based-Method

.. GENERATED FROM PYTHON SOURCE LINES 30-34

Perform the required imports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the required modules and set relevant paths, including that of the working
directory, model, and ls-dyna executable (uses DEV-104373-g6d20c20aee).

.. GENERATED FROM PYTHON SOURCE LINES 34-56

.. code-block:: default



    import os

    import ansys.heart.preprocessor.models as models
    from ansys.heart.simulator.simulator import BaseSimulator, DynaSettings
    import numpy as np
    import pyvista as pv

    # specify the path to the working directory and heart model
    workdir = os.path.join("pyansys-heart", "downloads", "Strocchi2020", "01", "FourChamber")
    path_to_model = os.path.join(workdir, "heart_model.pickle")

    # specify LS-DYNA path
    lsdyna_path = r"ls-dyna_smp"

    # load heart model.
    model: models.FourChamber = models.HeartModel.load_model(path_to_model)

    # set base working directory
    model.info.workdir = str(workdir)


.. GENERATED FROM PYTHON SOURCE LINES 61-64

Instantiate the simulator object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
instantiate simulator. Change options where necessary.

.. GENERATED FROM PYTHON SOURCE LINES 66-70

.. note::
   The DynaSettings object supports several LS-DYNA versions and platforms.
   Including: "smp", "intempi", "msmpi", "windows", "linux", or "wsl" Choose
   the one that is appropriate for you.

.. GENERATED FROM PYTHON SOURCE LINES 70-88

.. code-block:: default


    # instantiate LS-DYNA settings of choice
    dyna_settings = DynaSettings(
        lsdyna_path=lsdyna_path, dynatype="smp", num_cpus=4, platform="windows"
    )

    simulator = BaseSimulator(
        model=model,
        dyna_settings=dyna_settings,
        simulation_directory=os.path.join(workdir, "simulation"),
    )

    simulator.settings.load_defaults()

    # remove fiber/sheet information if already exists
    model.mesh.cell_data["fiber"] = np.zeros((model.mesh.n_cells, 3))
    model.mesh.cell_data["sheet"] = np.zeros((model.mesh.n_cells, 3))


.. GENERATED FROM PYTHON SOURCE LINES 89-91

Compute atrial fibers
~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 91-99

.. code-block:: default


    # Compute left atrium fiber
    la = simulator.compute_left_atrial_fiber()

    # Appendage apex point should be manually given to compute right atrium fiber
    appendage_apex = [-50, 106, 425]
    ra = simulator.compute_right_atrial_fiber(appendage_apex)


.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note::
   You may need to define an appropriate point for the right atrial appendage
   the list defines the x, y, and z coordinates close to the appendage.

.. GENERATED FROM PYTHON SOURCE LINES 105-107

Plot bundle selection results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 107-110

.. code-block:: default

    la.set_active_scalars("bundle")
    la.plot()


.. GENERATED FROM PYTHON SOURCE LINES 111-114

.. image:: /_static/images/la_bundle.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 114-118

.. code-block:: default


    ra.set_active_scalars("bundle")
    ra.plot()


.. GENERATED FROM PYTHON SOURCE LINES 119-122

.. image:: /_static/images/ra_bundle.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 124-126

Plot fibers
~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 126-134

.. code-block:: default

    plotter = pv.Plotter()
    mesh = la.ctp()
    streamlines = mesh.streamlines(vectors="e_l", source_radius=50, n_points=50000)
    tubes = streamlines.tube()
    plotter.add_mesh(mesh, opacity=0.5, color="white")
    plotter.add_mesh(tubes, color="red")
    plotter.show()


.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. image:: /_static/images/la_fiber.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 138-147

.. code-block:: default


    plotter = pv.Plotter()
    mesh = ra.ctp()
    streamlines = mesh.streamlines(vectors="e_l", source_radius=50, n_points=50000)
    tubes = streamlines.tube()
    plotter.add_mesh(mesh, opacity=0.5, color="white")
    plotter.add_mesh(tubes, color="red")
    plotter.show()


.. GENERATED FROM PYTHON SOURCE LINES 148-151

.. image:: /_static/images/ra_fiber.png
  :width: 400pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 153-164

.. code-block:: default


    # Atrial fibers are automatically assigned to heart model after computation.

    plotter = pv.Plotter()
    mesh = model.mesh.ctp()
    streamlines = mesh.streamlines(vectors="fiber", source_radius=100, n_points=50000)
    tubes = streamlines.tube()
    plotter.add_mesh(mesh, opacity=0.5, color="white")
    plotter.add_mesh(tubes, color="red")
    plotter.show()


.. GENERATED FROM PYTHON SOURCE LINES 165-168

.. image:: /_static/images/atrial_fiber_assign.png
  :width: 400pt
  :align: center


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.000 seconds)


.. _sphx_glr_download_examples_preprocessor_doc_example_atrial_fiber.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: doc_example_atrial_fiber.py <doc_example_atrial_fiber.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: doc_example_atrial_fiber.ipynb <doc_example_atrial_fiber.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_







:class:`SystemModelPost`
========================

.. py:class:: ansys.heart.postprocessor.system_model_post.SystemModelPost(dir)

   
   Class for post-processing system model.













   .. rubric:: Notes

   unit: ms, kPa, mL



   ..
       !! processed by numpydoc !!


.. py:currentmodule:: SystemModelPost

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~get_ejection_fraction`
            - Compute ejection fraction at a given time interval.
          * - :py:attr:`~plot_pv_loop`
            - Plot PV loop.



   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~dir`
            - 
          * - :py:attr:`~model_type`
            - 
          * - :py:attr:`~lv_system`
            - 






Import detail
-------------

.. code-block:: python

    from ansys.heart.postprocessor.system_model_post import SystemModelPost


Attribute detail
----------------

.. py:attribute:: dir

.. py:attribute:: model_type
   :value: 'LV'


.. py:attribute:: lv_system



Method detail
-------------

.. py:method:: get_ejection_fraction(t_start=0, t_end=100000000000.0)

   
   Compute ejection fraction at a given time interval.


   :Parameters:

       **t_start: start time**
           ..

       **t_end: end time**
           ..



   :Returns:

       :obj:`Ejection` :obj:`fraction`
           ..











   ..
       !! processed by numpydoc !!

.. py:method:: plot_pv_loop(t_start=0, t_end=100000000000.0, show_ed=True, ef=[None, None])

   
   Plot PV loop.


   :Parameters:

       **ef: Default None, else plot ejection fraction in legend.**
           ..

       **show_ed: Default False, else plot ED state**
           ..

       **t_start: start time**
           ..

       **t_end: end time**
           ..














   ..
       !! processed by numpydoc !!











:class:`MechanicsSimulator`
===========================

.. py:class:: ansys.heart.core.simulator.MechanicsSimulator(model: ansys.heart.core.models.HeartModel, dyna_settings: ansys.heart.core.settings.settings.DynaSettings, simulation_directory: pathlib = '', initial_stress: bool = True)

   Bases: :py:obj:`BaseSimulator`


   
   Mechanics simulator with imposed active stress.
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: MechanicsSimulator

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~simulate`
            - Launch the main mechanical simulation.
          * - :py:attr:`~compute_stress_free_configuration`
            - Compute the stress-free configuration of the model.



   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~initial_stress`
            - If stress free computation is taken into considered.






Import detail
-------------

.. code-block:: python

    from ansys.heart.core.simulator import MechanicsSimulator


Attribute detail
----------------

.. py:attribute:: initial_stress
   :value: True


   
   If stress free computation is taken into considered.
















   ..
       !! processed by numpydoc !!



Method detail
-------------

.. py:method:: simulate(folder_name: str = 'main-mechanics', zerop_folder: str | None = None, auto_post: bool = True, extra_k_files: list[str] = [])

   
   Launch the main mechanical simulation.


   :Parameters:

       **folder_name** : :class:`python:str`, :obj:`optional`
           simulation folder name, by default "main-mechanics"

       **zerop_folder** : :class:`python:str` | :data:`python:None`, :obj:`optional`
           folder contains stress free simulation.
           Use "zeropressure" under root directory if None

       **auto_post** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`
           Flag indicating whether to run post-process scripts, by default True

       **extra_k_files** : :class:`python:list`\[:class:`python:str`], :obj:`optional`
           user defined k files, by default []














   ..
       !! processed by numpydoc !!

.. py:method:: compute_stress_free_configuration(folder_name='zeropressure', overwrite: bool = True, extra_k_files: list[str] = [])

   
   Compute the stress-free configuration of the model.


   :Parameters:

       **folder_name** : :class:`python:str`, :obj:`optional`
           simulation folder name, by default "zeropressure"

       **overwrite** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`
           run simulation and overwrite files, by default True

       **extra_k_files** : :class:`python:list`\[:class:`python:str`], :obj:`optional`
           user defined k files, by default []














   ..
       !! processed by numpydoc !!





name: pull-request

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ANSYS_VERSION: '241'
  ANSYS_DPF_ACCEPT_LA: 'Y'
  MAIN_PYTHON_VERSION: '3.11'
  DOCUMENTATION_CNAME: 'heart.health.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-health-heart'
  ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
  PYFLUENT_START_INSTANCE: 0
  PYFLUENT_LAUNCH_CONTAINER: 1
  FLUENT_IMAGE_TAG: v24.2.0

jobs:

  #labeler:
  #  name: "Labels"
  #  permissions:
  #    contents: read
  #    pull-requests: write
  #  runs-on: ubuntu-latest
  #  steps:
  #   - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

  #   - name: "Update labels"
  #     uses: micnncim/action-label-syncer@3abd5ab72fda571e69fffd97bd4e0033dd5f495c # v1.3.0
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #   - name: "Label pull-request"
  #     uses: actions/labeler@8558fd74291d67161a8a78ce36a881fa63b766a9 # v5.0.0
  #     with:
  #      repo-token: ${{ secrets.GITHUB_TOKEN }}

  #changelog-fragment:
  #  name: "Create changelog fragment"
  #  runs-on: ubuntu-latest
  #  needs: labeler
  #  permissions:
  #    contents: read
  #    pull-requests: write
  #  steps:

  #    - uses: ansys/actions/check-pr-title@b666c18ca3623198a1be4cf46f4522736527fee9 # v9.0.0
  #      with:
  #        token: ${{ secrets.GITHUB_TOKEN }}

  #    - uses: ansys/actions/doc-changelog@b666c18ca3623198a1be4cf46f4522736527fee9 # v9.0.0
  #      with:
  #        token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
  #        use-conventional-commits: true
  #        use-default-towncrier-config: true
  #        bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
  #        bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  #code-style:
  #  name: "Code style"
  #  runs-on: ubuntu-latest
  #  needs: changelog-fragment
  #  steps:
  #    - uses: ansys/actions/code-style@b666c18ca3623198a1be4cf46f4522736527fee9 # v9.0.0
  #      with:
  #        python-version: ${{ env.MAIN_PYTHON_VERSION }}

  #doc-style:
  #  name: Documentation Style Check
  #  runs-on: ubuntu-latest
  #  needs: changelog-fragment
  #  steps:
  #    - uses: ansys/actions/doc-style@b666c18ca3623198a1be4cf46f4522736527fee9 # v9.0.0
  #      with:
  #        token: ${{ secrets.GITHUB_TOKEN }}

  #wheelhouse:
  #  name: "Wheelhouse / ${{ matrix.os}} / ${{ matrix.python-version }}"
  #  runs-on: ${{ matrix.os }}
  #  needs: doc-style
  #  strategy:
  #    fail-fast: false
  #    matrix:
  #      os: [ubuntu-latest, windows-latest]
  #      python-version: ['3.11', '3.12']
  #  steps:
  #    - uses: ansys/actions/build-wheelhouse@b666c18ca3623198a1be4cf46f4522736527fee9 # v9.0.0
  #      with:
  #        library-name: ${{ env.LIBRARY_NAME }}
  #        operating-system: ${{ matrix.os }}
  #        python-version: ${{ matrix.python-version }}
  #        check-licenses: true

  doc-build:
    name: "Build documentation"
    runs-on: [self-hosted, pyhealth]
  #  needs: doc-style
    timeout-minutes: 30
    steps:

      - name: "Checkout the project"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Install Python ${{ env.MAIN_PYTHON_VERSION }}"
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5.4.1
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: "Install Tox"
        run: |
          uv tool install tox --with tox-uv

      - name: "Build documentation"
        env:
          PYANSYS_HEART_FLUENT_VERSION: 24.1
          PYFLUENT_LAUNCH_CONTAINER: 0
          PYANSYS_HEART_LSDYNA_PATH: r"C:\Program Files\ANSYS Inc\LS-DYNA\R16.0\windows\R16.0.exe"
          PYANSYS_HEART_LSDYNA_PLATFORM: windows
          PYANSYS_HEART_LSDYNA_TYPE: "smp"
          MPLBACKEND: Agg
          PYFLUENT_UI_MODE: no_gui # default hidden_gui fails on self-hosted runner
        run: |
          tox -e doc-links,doc-html,doc-pdf

      - name: Upload HTML documentation artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: documentation-html
          path: doc/_build/html
          retention-days: 7

      - name: Upload PDF documentation artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: documentation-pdf
          path: doc/_build/latex/*.pdf
          retention-days: 7

  # tests:
  #   name: "Tests / ${{ matrix.tests.runner }} / Python ${{ matrix.python-version }} / ${{ matrix.tests.name }}"
  #   runs-on: ${{ matrix.tests.runner }}
  #   needs: code-style
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ['3.11', '3.12']
  #       tests:
  #         - { name: "Base", runner: "ubuntu-latest", markers: "not (requires_fluent or requires_dpf)", tox_extra_args: ""}
  #         - { name: "PyDPF", runner: "ubuntu-latest", markers: "requires_dpf", needs_dpf: true}
  #         - { name: "PyFluent", runner: "ubuntu-latest", markers: "requires_fluent", needs_fluent: true }
  #   steps:

  #     - name: "Checkout the project"
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

  #     - name: "Set up uv"
  #       uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5.4.1
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install DPF
  #       uses: ansys/pydpf-actions/install-dpf-server@v2.3
  #       if: matrix.tests.needs_dpf
  #       with:
  #         dpf-standalone-TOKEN: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
  #         ANSYS_VERSION : ${{ env.ANSYS_VERSION }}

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
  #       if: matrix.tests.needs_fluent
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Pull Fluent docker image
  #       if: matrix.tests.needs_fluent
  #       run: |
  #         sudo rm -rf /usr/share/dotnet
  #         docker pull ghcr.io/ansys/pyfluent:${{ env.FLUENT_IMAGE_TAG }}
  #         docker image prune -f

  #     - name: Run Tox
  #       if: ${{ ! matrix.tests.needs_dpf }}
  #       env:
  #         PYFLUENT_UI_MODE: "hidden_gui"
  #       run: |
  #         uv tool run tox -e tests -- -m "${{ matrix.tests.markers }}" -vv

  #     - name: Run Tox
  #       if: matrix.tests.needs_dpf
  #       run: |
  #         uv tool run tox -e tests -x testenv.deps+="-e dpf-standalone/v${{ env.ANSYS_VERSION }}" -- -m "${{ matrix.tests.markers }}" -vv

  # build-library:
  #   name: "Build library"
  #   runs-on: ubuntu-latest
  #   needs: [wheelhouse, doc-build, tests]
  #   steps:
  #     - uses: ansys/actions/build-library@b666c18ca3623198a1be4cf46f4522736527fee9 # v9.0.0
  #       with:
  #         library-name: ${{ env.LIBRARY_NAME }}
  #         python-version: ${{ env.MAIN_PYTHON_VERSION }}

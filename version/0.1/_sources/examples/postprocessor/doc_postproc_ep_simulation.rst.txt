
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/postprocessor/doc_postproc_ep_simulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_postprocessor_doc_postproc_ep_simulation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_postprocessor_doc_postproc_ep_simulation.py:


Post process EP simulation
--------------------------
This example shows you how to post process an EP simulation.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform the required imports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the required modules

.. GENERATED FROM PYTHON SOURCE LINES 11-23

.. code-block:: default



    import os
    import pathlib

    from ansys.heart.postprocessor.EPpostprocessor import EPpostprocessor

    # set ep results folder
    ep_folder = os.path.join(
        pathlib.Path(__file__).absolute().parents[2],
        "downloads\\Strocchi2020\\01\FourChamber\\simulation-EP\\main-ep\\d3plot",
    )

.. GENERATED FROM PYTHON SOURCE LINES 27-30

Instantiate the Postprocessor
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
instantiate Postprocessor

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default


    postproc = EPpostprocessor(results_path=ep_folder)


.. GENERATED FROM PYTHON SOURCE LINES 34-37

Activation times
~~~~~~~~~~~~~~~~
Get activation times and plot the field

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default


    activation_time_field = postproc.get_activation_times()
    activation_time_field.plot(show_edges=False)

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. image:: /_static/images/ep_post_activationtime.png
  :width: 300pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 44-50

.. code-block:: default


    # Compute total activation time
    activation_time_data = activation_time_field.data_as_list
    total_acctivation_time = max(activation_time_data) - min(activation_time_data)
    print("Total activation time: " + str(total_acctivation_time) + " ms")


.. GENERATED FROM PYTHON SOURCE LINES 51-54

Transmembrane potentials
~~~~~~~~~~~~~~~~~~~~~~~~
Get transmembrane potentials on list of nodes and plot

.. GENERATED FROM PYTHON SOURCE LINES 54-55

.. code-block:: default

    vm, times = postproc.get_transmembrane_potential(node_id=[0, 1, 100], plot=True)

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. image:: /_static/images/ep_tm.png
  :width: 300pt
  :align: center

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default


    # Animate and export in vtk format
    postproc.export_transmembrane_to_vtk()
    postproc.animate_transmembrane()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.000 seconds)


.. _sphx_glr_download_examples_postprocessor_doc_postproc_ep_simulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: doc_postproc_ep_simulation.py <doc_postproc_ep_simulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: doc_postproc_ep_simulation.ipynb <doc_postproc_ep_simulation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

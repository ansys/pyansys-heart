
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/simulator/doc_EP-mechanics_simulator_fullheart_rodero.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_simulator_doc_EP-mechanics_simulator_fullheart_rodero.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_simulator_doc_EP-mechanics_simulator_fullheart_rodero.py:


Full heart EP-mechanics
-----------------------
This example shows you how to consume a full heart model and
set it up for a coupled electromechanical simulation.

.. GENERATED FROM PYTHON SOURCE LINES 32-41

Example setup
-------------
before computing the fiber orientation, purkinje network we need to load
the required modules, load a heart model and set up the simulator.

Perform the required imports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the required modules and set relevant paths, including that of the working
directory, model, and ls-dyna executable.

.. GENERATED FROM PYTHON SOURCE LINES 41-51

.. code-block:: default



    import os

    import ansys.heart.preprocessor.models as models
    from pint import Quantity

    from ansys.heart.simulator.settings.material.material import NeoHookean
    from ansys.heart.simulator.simulator import DynaSettings, EPMechanicsSimulator


.. GENERATED FROM PYTHON SOURCE LINES 56-62

Example setup
-------------
Perform the required imports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Import the required modules and set relevant paths, including that of the working
directory and generated model

.. GENERATED FROM PYTHON SOURCE LINES 62-76

.. code-block:: default



    # accept dpf license aggrement
    # https://dpf.docs.pyansys.com/version/stable/getting_started/licensing.html#ref-licensing
    os.environ["ANSYS_DPF_ACCEPT_LA"] = "Y"

    # specify necessary paths.
    # Note that we need to cast the paths to strings to facilitate serialization.
    case_file = os.path.join("pyansys-heart", "downloads", "Rodero2021", "01", "01.vtk")
    workdir = os.path.join(os.path.dirname(case_file), "FullHeart")


    path_to_model = os.path.join(workdir, "heart_model.pickle")


.. GENERATED FROM PYTHON SOURCE LINES 90-92

Load the full heart model
~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 92-96

.. code-block:: default


    # instantiate a four chamber model
    model: models.FullHeart = models.HeartModel.load_model(path_to_model)


.. GENERATED FROM PYTHON SOURCE LINES 97-100

Instantiate the simulator object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
instantiate the simulator and settings appropriately.

.. GENERATED FROM PYTHON SOURCE LINES 100-149

.. code-block:: default


    # instantaiate dyna settings of choice
    lsdyna_path = r"your_dyna_exe"  # tested with DEV-111820
    dyna_settings = DynaSettings(
        lsdyna_path=lsdyna_path, dynatype="intelmpi", platform="wsl", num_cpus=6
    )


    # instantiate simulator object
    simulator = EPMechanicsSimulator(
        model=model,
        dyna_settings=dyna_settings,
        simulation_directory=os.path.join(workdir, "ep-mechanics"),
    )

    # load default simulation settings
    simulator.settings.load_defaults()

    # compute fiber orientation in the ventricles and atria
    simulator.compute_fibers()
    simulator.compute_left_atrial_fiber()
    simulator.compute_right_atrial_fiber(appendage=[39, 29, 98])

    # switch atria to active
    simulator.model.left_atrium.fiber = True
    simulator.model.left_atrium.active = True

    simulator.model.right_atrium.fiber = True
    simulator.model.right_atrium.active = True

    ## Optionally, we can create more anatomical details.
    ## Sometimes, it's in favor of convergence rate of mechanical solve

    # Extract elements around atrial caps and assign as a passive material
    ring = simulator.model.create_atrial_stiff_ring(radius=5)
    ring.meca_material = NeoHookean(rho=0.001, c10=0.1, nu=0.499)

    # Extract elements around atrialvenricular valves and assign as a passive material
    simulator.create_stiff_ventricle_base(stiff_material=NeoHookean(rho=0.001, c10=0.1, nu=0.499))


    # Estimate the stress-free-configuration
    simulator.compute_stress_free_configuration()

    # Compute the conduction system
    simulator.compute_purkinje()
    simulator.compute_conduction_system()



.. GENERATED FROM PYTHON SOURCE LINES 160-162

Start main simulation
~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 162-167

.. code-block:: default

    simulator.settings.mechanics.analysis.end_time = Quantity(800, "ms")
    simulator.settings.mechanics.analysis.dt_d3plot = Quantity(10, "ms")

    simulator.model.dump_model(os.path.join(workdir, "heart_fib_beam.pickle"))


.. GENERATED FROM PYTHON SOURCE LINES 168-171

.. note::
   A constant pressure is prescribed to the atria.
   No circulation system is coupled with the atria.

.. GENERATED FROM PYTHON SOURCE LINES 171-175

.. code-block:: default


    # start main simulation
    simulator.simulate()


.. GENERATED FROM PYTHON SOURCE LINES 176-177

Result in LS-PrePost

.. GENERATED FROM PYTHON SOURCE LINES 179-183

.. video:: ../../_static/images/doc_Christobal01_epmeca_fh.mp4
  :width: 600
  :loop:
  :class: center


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.000 seconds)


.. _sphx_glr_download_examples_simulator_doc_EP-mechanics_simulator_fullheart_rodero.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: doc_EP-mechanics_simulator_fullheart_rodero.py <doc_EP-mechanics_simulator_fullheart_rodero.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: doc_EP-mechanics_simulator_fullheart_rodero.ipynb <doc_EP-mechanics_simulator_fullheart_rodero.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
